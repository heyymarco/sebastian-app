.navside {
    // private variables, not exported, so use a short name:
    // restMenuInlineSize:
    --v1: calc(var(--navs-menuInlineSize) - (2 * var(--navs-borderRadius)));
    // restMenuBlockSize:
    --v2: calc(var(--navs-menuBlockSize) - (2 * var(--navs-borderRadius)));
    // menuShiftPos:
    --v3: calc(var(--navside-menuSelectedIndex) * var(--navs-menuBlockSize));
    
    
    
    // layouts:
    display: inline-grid;
    grid-template:
        "..... ....... ....... ........"var(--navs-paddingBlock)
        "..... ....... ....... ........"calc(0px - var(--navs-borderRadius))
        "..... ....... fill1    corner1"var(--navs-borderRadius)
        "..... corner2 ....... ........"var(--navs-borderRadius)
        "..... void3   ....... ........"var(--v2)
        "..... corner4 ....... ........"var(--navs-borderRadius)
        "..... ......  fill5    corner5"var(--navs-borderRadius)
        "..... menusC3 .......  menusC4"auto
        "..... ....... ....... ........"1fr
        "..... ....... ....... ........"var(--navs-paddingBlock)
        /
        var(--navs-paddingInline) var(--navs-borderRadius) auto var(--navs-borderRadius)
        ;
    
    
    
    // sizes:
    min-inline-size: var(--navs-minInlineSize);
    min-block-size: var(--navs-minBlockSize);
    
    
    
    // borders & shadows:
    filter: var(--navs-dropShadow);
    // invisible border, just for maintaining size:
    border        : solid var(--navs-borderWidth) transparent;
}



/* <Underlay>: */

.navside>.underlay {
    // positions:
    grid-area: 1/1/-1/-1;
    
    
    
    // layouts:
    display: grid;
    grid-template:
        "..... ....... ....... ........" var(--navs-paddingBlock)
        "..... ....... ....... ........" var(--v3)
        "..... ....... fill1    corner1" var(--navs-borderRadius)
        "..... corner2 ....... ........" var(--navs-borderRadius)
        "..... void3   ....... ........" var(--v2)
        "..... corner4 ....... ........" var(--navs-borderRadius)
        "..... ......  fill5    corner5" var(--navs-borderRadius)
        "..... menusC3 .......  menusC4" auto
        "..... ....... ....... ........" 1fr
        "..... ....... ....... ........" var(--navs-paddingBlock)
        /
        var(--navs-paddingInline) var(--navs-borderRadius) auto var(--navs-borderRadius)
        ;
    
    --bdr: var(--navs-borderRadius);
    --bdw: var(--navs-borderWidth);
    --pdi: var(--navs-paddingInline);
    --pdb: var(--navs-paddingBlock);
    clip-path: polygon(0 0, 100% 0, 100% calc((var(--bdw) * 2) + var(--pdb) + var(--v3)), calc(100% - var(--bdr) + (var(--bdr) * 1)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0)), calc(100% - var(--bdr) + (var(--bdr) * 0.987)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.156)), calc(100% - var(--bdr) + (var(--bdr) * 0.951)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.309)), calc(100% - var(--bdr) + (var(--bdr) * 0.891)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.453)), calc(100% - var(--bdr) + (var(--bdr) * 0.809)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.587)), calc(100% - var(--bdr) + (var(--bdr) * 0.707)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.707)), calc(100% - var(--bdr) + (var(--bdr) * 0.587)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.809)), calc(100% - var(--bdr) + (var(--bdr) * 0.453)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.891)), calc(100% - var(--bdr) + (var(--bdr) * 0.309)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.951)), calc(100% - var(--bdr) + (var(--bdr) * 0.156)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (var(--bdr) * 0.987)), calc(100% - var(--bdr)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + var(--bdr)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + var(--bdr)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * 1.22)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -1)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.156)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.987)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.309)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.951)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.453)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.891)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.587)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.809)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.707)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.707)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.809)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.587)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.891)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.453)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.951)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.309)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr) + ((var(--bdr) - var(--bdw)) * -0.987)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + ((var(--bdr) - var(--bdw)) * -0.156)), calc((var(--bdw) * 3) + var(--pdi)) calc((var(--bdw) * 2) + var(--pdb) + var(--v3) + (2 * var(--bdr))), calc((var(--bdw) * 3) + var(--pdi)) calc(var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * -1.11)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.012)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.156)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.048)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.309)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.108)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.453)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.190)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.587)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.292)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.707)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.412)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.809)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.546)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.891)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.690)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.951)), calc((var(--bdw) * 3) + var(--pdi) + ((var(--bdr) - var(--bdw)) * 0.843)) calc(var(--bdw) + var(--pdb) + var(--v3) + (2 * var(--bdr)) + var(--v2) + ((var(--bdr) - var(--bdw)) * 0.987)), calc((var(--bdw) * 2) + var(--pdi) + var(--bdr)) calc(var(--pdb) + var(--v3) + (3 * var(--bdr)) + var(--v2)), calc(100% - var(--bdr)) calc(var(--pdb) + var(--v3) + (3 * var(--bdr)) + var(--v2)), calc(100% - var(--bdr) + (var(--bdr) * -1.83)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -1)), calc(100% - var(--bdr) + (var(--bdr) * 0.156)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.987)), calc(100% - var(--bdr) + (var(--bdr) * 0.309)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.951)), calc(100% - var(--bdr) + (var(--bdr) * 0.453)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.891)), calc(100% - var(--bdr) + (var(--bdr) * 0.587)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.809)), calc(100% - var(--bdr) + (var(--bdr) * 0.707)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.707)), calc(100% - var(--bdr) + (var(--bdr) * 0.809)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.587)), calc(100% - var(--bdr) + (var(--bdr) * 0.891)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.453)), calc(100% - var(--bdr) + (var(--bdr) * 0.951)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.309)), calc(100% - var(--bdr) + (var(--bdr) * 0.987)) calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2) + (var(--bdr) * -0.156)), 100% calc(var(--pdb) + var(--v3) + (4 * var(--bdr)) + var(--v2)), 100% 100%, 0 100%);
    
    
    
    // borders:
    border        : var(--navs-borderStyle) var(--navs-borderWidth) var(--th-border);
    border-radius : var(--navs-borderRadius);
    
    
    
    // backgrounds:
    background: var(--th-backg);
    
    
    
    // spacings:
    margin: calc(0px - var(--navs-borderWidth));
    
    
    
    // children:
    &>:is(.fill1, .corner1, .corner2, .void3, .corner4, .fill5, .corner5) {
        border: inherit;
        position: relative;
        inset-inline-start: var(--navs-borderWidth);
    }
    
    &>:is(.fill1, .corner1) {
        inset-block-start: var(--navs-borderWidth);
    }
    
    &>:is(.fill5, .corner5) {
        inset-block-end: var(--navs-borderWidth);
    }
    
    &>.fill1 {
        grid-area: fill1;
        border-inline: 0;
        border-block-start: 0;
    }
    
    &>.corner1 {
        grid-area: corner1;
        border-inline-start: 0;
        border-block-start: 0;
        border-end-end-radius: var(--navs-borderRadius);
    }
    
    &>.corner2 {
        grid-area: corner2;
        border-inline-end: 0;
        border-block-end: 0;
        border-start-start-radius: var(--navs-borderRadius);
    }
    
    &>.void3 {
        grid-area: void3;
        border-inline-end: 0;
        border-block: 0;
    }
    
    &>.corner4 {
        grid-area: corner4;
        border-inline-end: 0;
        border-block-start: 0;
        border-end-start-radius: var(--navs-borderRadius);
    }
    
    &>.fill5 {
        grid-area: fill5;
        border-inline: 0;
        border-block-end: 0;
    }
    
    &>.corner5 {
        grid-area: corner5;
        border-inline-start: 0;
        border-block-end: 0;
        border-start-end-radius: var(--navs-borderRadius);
    }
}



/* <Menus>: */

.navside>.menus {
    // positions:
    grid-area: corner2/corner2/menusC4/menusC4;
    z-index: 1;
    
    
    
    // resets:
    list-style-type: none;
    margin: 0;
    padding-inline-start: 0;
    
    
    
    // layouts:
    display: flex;
    flex-direction: column;
    justify-content: start;
    align-items: stretch;
    flex-wrap: nowrap;
    
    
    
    // children:
    >li {
        // resets:
        text-align: unset;
        
        
        
        // layouts:
        display: inherit;
        flex-direction: inherit;
        justify-content: inherit;
        align-items: inherit;
        flex-wrap: inherit;
        
        
        
        // children:
        >* {
            // resets:
            appearance: none;
            outline        : unset; // removes focus outline
            outline-offset : unset; // removes focus outline
            
            
            
            // layouts:
            display: flex;
            flex-direction: row;
            justify-content: stretch;
            align-items: center;
            background: transparent;
            flex: 1 1 auto;
            
            
            
            // foregrounds:
            color: var(--th-foreg);
            
            
            
            // typos:
            font-size: var(--fontSize);
            font-family: var(--fontFamily);
            font-weight: var(--fontWeight);
            font-style: var(--fontStyle);
            text-decoration: var(--textDecoration);
            line-height: var(--lineHeight);
            
            
            
            // borders:
            border-radius: var(--navs-borderRadius);
            
            
            
            // sizes:
            box-sizing: border-box;
            inline-size: var(--navs-menuInlineSize);
            block-size: var(--navs-menuBlockSize);
            
            
            
            // spacings:
            padding-inline: var(--navs-menuPaddingInline);
            padding-block: var(--navs-menuPaddingBlock);
            column-gap: var(--navs-menuGapInline);
            row-gap: var(--navs-menuGapBlock);
            
            
            
            // <Indicator>
            // disableable:
            &:is([aria-disabled]:not([aria-disabled="false"]), :disabled) {
                cursor: var(--ctrl-cursorDisable);
                --dis-filterContrast   : var(--indi-filterDisableContrast);
                --dis-filterBrightness : var(--indi-filterDisableBrightness);
                --dis-filterSaturate   : var(--indi-filterDisableSaturate);
            }
            
            
            
            // <Indicator>
            // activatable (selected/checked/active/current):
            &.active {
                --ac-filterContrast   : var(--indi-filterActiveContrast);
                --ac-filterBrightness : var(--indi-filterActiveBrightness);
                --ac-filterSaturate   : var(--indi-filterActiveSaturate);
            }
            
            
            
            // <Control>
            // focusable:
            &:is(:focus-visible, :has(:focus-visible)) {
                box-shadow: var(--ctrl-boxShadowFocus) var(--th-ring);
            }
            
            
            
            // <Control>
            // interactable (hover):
            &:is(:hover, :focus-visible, :has(:focus-visible)) {
                --in-filterContrast   : var(--ctrl-filterArriveContrast);
                --in-filterBrightness : var(--ctrl-filterArriveBrightness);
                --in-filterSaturate   : var(--ctrl-filterArriveSaturate);
            }
            
            
            
            // <ActionControl>
            // pressed/click:
            cursor: var(--act-cursor);
            &:is(:active) {
                --cl-filterContrast   : var(--act-filterPressContrast);
                --cl-filterBrightness : var(--act-filterPressBrightness);
                --cl-filterSaturate   : var(--act-filterPressSaturate);
            }
            
            
            
            // animations & transitions:
            transition:
                // disableable:
                --dis-filterContrast   var(--indi-transDisable),
                --dis-filterBrightness var(--indi-transDisable),
                --dis-filterSaturate   var(--indi-transDisable),
                
                // activatable (selected/checked/active/current):
                --ac-filterContrast   var(--indi-transActive),
                --ac-filterBrightness var(--indi-transActive),
                --ac-filterSaturate   var(--indi-transActive),
                
                // focusable:
                box-shadow            var(--ctrl-transFocus),
                
                // interactable (hover):
                --in-filterContrast   var(--ctrl-transArrive),
                --in-filterBrightness var(--ctrl-transArrive),
                --in-filterSaturate   var(--ctrl-transArrive),
                
                // pressed/click:
                --cl-filterContrast   var(--ctrl-transPress),
                --cl-filterBrightness var(--ctrl-transPress),
                --cl-filterSaturate   var(--ctrl-transPress),
            ;
            filter:
                // disableable:
                #{"contrast(var(--dis-filterContrast)) brightness(var(--dis-filterBrightness)) saturate(var(--dis-filterSaturate))"}
                
                // activatable (selected/checked/active/current):
                #{"contrast(var(--ac-filterContrast)) brightness(var(--ac-filterBrightness)) saturate(var(--ac-filterSaturate))"}
                
                // interactable (hover):
                #{"contrast(var(--in-filterContrast)) brightness(var(--in-filterBrightness)) saturate(var(--in-filterSaturate))"}
                
                // pressed/click:
                #{"contrast(var(--cl-filterContrast)) brightness(var(--cl-filterBrightness)) saturate(var(--cl-filterSaturate))"}
                ;
        }
    }
}

// disableable:
@property --dis-filterContrast {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}
@property --dis-filterBrightness {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}
@property --dis-filterSaturate {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}

// activatable (selected/checked/active/current):
@property --ac-filterContrast {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}
@property --ac-filterBrightness {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}
@property --ac-filterSaturate {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}

// interactable (hover):
@property --in-filterContrast {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}
@property --in-filterBrightness {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}
@property --in-filterSaturate {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}

// pressed/click:
@property --cl-filterContrast {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}
@property --cl-filterBrightness {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}
@property --cl-filterSaturate {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 100%;
}



/* themes: */

.navside {
    &.thPrimary {
        --th-backg: var(--col-primary);
        --th-foreg: var(--col-primaryText);
        --th-border: var(--col-primaryBold);
        --th-ring: var(--col-primaryThin);
    }
    &.thSecondary {
        --th-backg: var(--col-secondary);
        --th-foreg: var(--col-secondaryText);
        --th-border: var(--col-secondaryBold);
        --th-ring: var(--col-secondaryThin);
    }
    &.thSuccess {
        --th-backg: var(--col-success);
        --th-foreg: var(--col-successText);
        --th-border: var(--col-successBold);
        --th-ring: var(--col-successThin);
    }
    &.thInfo {
        --th-backg: var(--col-info);
        --th-foreg: var(--col-infoText);
        --th-border: var(--col-infoBold);
        --th-ring: var(--col-infoThin);
    }
    &.thWarning {
        --th-backg: var(--col-warning);
        --th-foreg: var(--col-warningText);
        --th-border: var(--col-warningBold);
        --th-ring: var(--col-warningThin);
    }
    &.thDanger {
        --th-backg: var(--col-danger);
        --th-foreg: var(--col-dangerText);
        --th-border: var(--col-dangerBold);
        --th-ring: var(--col-dangerThin);
    }
    &.thLight {
        --th-backg: var(--col-light);
        --th-foreg: var(--col-lightText);
        --th-border: var(--col-lightBold);
        --th-ring: var(--col-lightThin);
    }
    &.thDark {
        --th-backg: var(--col-dark);
        --th-foreg: var(--col-darkText);
        --th-border: var(--col-darkBold);
        --th-ring: var(--col-darkThin);
    }
}